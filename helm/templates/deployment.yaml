apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "keycloak-auth-template.fullname" . }}
  labels:
    {{- include "keycloak-auth-template.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "keycloak-auth-template.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "keycloak-auth-template.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.serviceAccount }}
      serviceAccountName: {{ include "keycloak-auth-template.serviceAccountName" . }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if eq .Values.keycloak.mode "dev" }}
          command: ["/opt/keycloak/bin/kc.sh"]
          args: ["start-dev"]
          {{- else }}
          command: ["/opt/keycloak/bin/kc.sh"]
          args: ["start", "--optimized"]
          {{- end }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
            - name: KC_DB
              value: {{ .Values.keycloak.database.vendor }}
            - name: KC_DB_URL
              value: "jdbc:postgresql://{{ .Values.keycloak.database.hostname }}:{{ .Values.keycloak.database.port }}/{{ .Values.keycloak.database.database }}"
            - name: KC_DB_USERNAME
              value: {{ .Values.keycloak.database.username }}
            - name: KC_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.keycloak.database.existingSecret }}
                  key: {{ .Values.keycloak.database.existingSecretKey }}
            - name: KEYCLOAK_ADMIN
              value: {{ .Values.keycloak.admin.username }}
            - name: KEYCLOAK_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.keycloak.admin.existingSecret }}
                  key: {{ .Values.keycloak.admin.existingSecretKey }}
            {{- range .Values.keycloak.extraEnv }}
            - name: {{ .name }}
              value: {{ .value | quote }}
            {{- end }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if .Values.keycloak.realmImport.enabled }}
          volumeMounts:
            - name: realm-config
              mountPath: /opt/keycloak/data/import
              readOnly: true
          {{- end }}
      {{- if .Values.keycloak.realmImport.enabled }}
      volumes:
        - name: realm-config
          configMap:
            name: {{ .Values.keycloak.realmImport.configMapName }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}